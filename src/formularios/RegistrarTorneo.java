package formularios;

import static formularios.RegistrarTorneo.txtDenominacion;
import static formularios.RegistrarTorneo.txtDescripcionLiga;
import static formularios.RegistrarTorneo.txtIdTorneo;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import programas.ver_conex;

/**
 *
 * @author Eduardo Avila <eduavila25@gmail.com>
 */
public class RegistrarTorneo extends javax.swing.JFrame {

    ver_conex conn = new ver_conex();
    //publicamos el cursor
    javax.swing.table.DefaultTableModel cursor;
    int c;
    int id_detalle;

    /**
     * Creates new form Registrar fechas
     */
    public RegistrarTorneo() {
        initComponents();
        cursor = (javax.swing.table.DefaultTableModel) grilla.getModel();
        des_text();
        hab_botones();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtIdVisitante = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grilla = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        bsalir = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        bgrabar = new javax.swing.JButton();
        bagregar = new javax.swing.JButton();
        bborrar1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtDenominacion = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDescripcionLiga = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtIdLocal = new javax.swing.JTextField();
        txtDescripcionLocal = new javax.swing.JTextField();
        txtDescripcionVisitante = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIdLiga = new javax.swing.JTextField();
        txtPeriodo = new javax.swing.JTextField();
        bAgregarItem = new javax.swing.JButton();
        txtcodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtIdTorneo = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Denominacion:");

        txtIdVisitante.setEnabled(false);
        txtIdVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdVisitanteActionPerformed(evt);
            }
        });
        txtIdVisitante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdVisitanteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdVisitanteKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Visitante:");

        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        grilla.setBackground(new java.awt.Color(102, 255, 255));
        grilla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Id Local", "Local", "Id Visitante", "Visitante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(grilla);
        if (grilla.getColumnModel().getColumnCount() > 0) {
            grilla.getColumnModel().getColumn(0).setResizable(false);
            grilla.getColumnModel().getColumn(0).setPreferredWidth(20);
            grilla.getColumnModel().getColumn(1).setResizable(false);
            grilla.getColumnModel().getColumn(1).setPreferredWidth(20);
            grilla.getColumnModel().getColumn(2).setResizable(false);
            grilla.getColumnModel().getColumn(2).setPreferredWidth(400);
            grilla.getColumnModel().getColumn(3).setResizable(false);
            grilla.getColumnModel().getColumn(3).setPreferredWidth(30);
            grilla.getColumnModel().getColumn(4).setResizable(false);
            grilla.getColumnModel().getColumn(4).setPreferredWidth(400);
        }

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bsalir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/logout_90894.png"))); // NOI18N
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bcancelar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bcancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Cancel_icon-icons.com_73703.png"))); // NOI18N
        bcancelar.setEnabled(false);
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        bgrabar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bgrabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        bgrabar.setEnabled(false);
        bgrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgrabarActionPerformed(evt);
            }
        });

        bagregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/1486485588-add-create-new-math-sign-cross-plus_81186.png"))); // NOI18N
        bagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(569, Short.MAX_VALUE)
                .addComponent(bagregar)
                .addGap(18, 18, 18)
                .addComponent(bgrabar)
                .addGap(18, 18, 18)
                .addComponent(bcancelar)
                .addGap(18, 18, 18)
                .addComponent(bsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bagregar)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bsalir)
                        .addComponent(bgrabar)
                        .addComponent(bcancelar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bborrar1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bborrar1.setText("Borrar item");
        bborrar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(bborrar1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bborrar1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Registrar Fechas Torneo");

        txtDenominacion.setEditable(false);
        txtDenominacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDenominacionActionPerformed(evt);
            }
        });
        txtDenominacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDenominacionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDenominacionKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Periodo");

        txtDescripcionLiga.setEditable(false);
        txtDescripcionLiga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionLigaActionPerformed(evt);
            }
        });
        txtDescripcionLiga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionLigaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionLigaKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Local:");

        txtIdLocal.setEnabled(false);
        txtIdLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdLocalActionPerformed(evt);
            }
        });
        txtIdLocal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdLocalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdLocalKeyTyped(evt);
            }
        });

        txtDescripcionLocal.setEditable(false);
        txtDescripcionLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionLocalActionPerformed(evt);
            }
        });
        txtDescripcionLocal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionLocalKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionLocalKeyTyped(evt);
            }
        });

        txtDescripcionVisitante.setEditable(false);
        txtDescripcionVisitante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionVisitanteActionPerformed(evt);
            }
        });
        txtDescripcionVisitante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionVisitanteKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDescripcionVisitanteKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Fecha Nro:");

        txtFecha.setEnabled(false);
        txtFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaActionPerformed(evt);
            }
        });
        txtFecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFechaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFechaKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Liga:");

        txtIdLiga.setEnabled(false);
        txtIdLiga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdLigaActionPerformed(evt);
            }
        });
        txtIdLiga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdLigaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdLigaKeyTyped(evt);
            }
        });

        txtPeriodo.setEditable(false);
        txtPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPeriodoActionPerformed(evt);
            }
        });
        txtPeriodo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPeriodoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPeriodoKeyTyped(evt);
            }
        });

        bAgregarItem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        bAgregarItem.setText("Agregar item");
        bAgregarItem.setEnabled(false);
        bAgregarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarItemActionPerformed(evt);
            }
        });

        txtcodigo.setEnabled(false);
        txtcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcodigoActionPerformed(evt);
            }
        });
        txtcodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcodigoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcodigoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Codigo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Torneo:");

        txtIdTorneo.setEnabled(false);
        txtIdTorneo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdTorneoActionPerformed(evt);
            }
        });
        txtIdTorneo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdTorneoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdTorneoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtIdTorneo))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdLiga, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescripcionLiga, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDenominacion, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDescripcionLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtIdVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescripcionVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bAgregarItem)))))
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(410, 410, 410)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtDenominacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdLiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescripcionLiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtIdTorneo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIdLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescripcionLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIdVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDescripcionVisitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bAgregarItem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        limpiargrilla();
        limpiarTextos();

        bgrabar.setEnabled(false);
        bagregar.setEnabled(true);
        bcancelar.setEnabled(false);

        txtDenominacion.setEnabled(false);
        txtDescripcionLiga.setEnabled(false);
        txtIdVisitante.setEnabled(false);
        txtFecha.setEnabled(false);

    }//GEN-LAST:event_bcancelarActionPerformed

    private void bagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagregarActionPerformed
        operacion = "agregar";
        gencod();
        txtIdTorneo.setEnabled(true);
        txtIdTorneo.requestFocus();
        bagregar.setEnabled(false);
    }//GEN-LAST:event_bagregarActionPerformed

    private void txtIdVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdVisitanteActionPerformed
        // TODO add your handling code here:
        validarFechaVisitante();
    }//GEN-LAST:event_txtIdVisitanteActionPerformed

    private void txtIdVisitanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdVisitanteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdVisitanteKeyTyped

    private void txtIdVisitanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdVisitanteKeyPressed

        if (txtIdVisitante.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.txtIdVisitante;
            VentanaBuscar buscador = new VentanaBuscar("SELECT id,DESCRIPCION AS descripcion\n"
                    + "FROM EQUIPO where DESCRIPCION like  ", new String[]{"CODIGO EQUIPO", "NOMBRE EQUIPO"}, 2, tfParam);
            buscador.setTitle("BUSCAR EQUIPO");
            buscador.setVisible(true);
        }
    }//GEN-LAST:event_txtIdVisitanteKeyPressed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_bsalirActionPerformed

    private void txtDenominacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDenominacionActionPerformed
        // TODO add your handling code here:       
        txtPeriodo.setEnabled(true);
        txtPeriodo.requestFocus();

    }//GEN-LAST:event_txtDenominacionActionPerformed

    private void txtDenominacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDenominacionKeyPressed
        // TODO add your handling code here:
        if (txtDenominacion.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.txtDenominacion;
            VentanaBuscar buscador = new VentanaBuscar("SELECT BARRA,UPPER(descripcion)AS descripcion\n"
                    + "FROM producto where descripcion like  ", new String[]{"CODIGO PRODUCTO", "NOMBRE PRODUCTO"}, 2, tfParam);
            buscador.setTitle("Buscar PRODUCTOS");
            buscador.setVisible(true);
            buscador.setVisible(true);
        }
    }//GEN-LAST:event_txtDenominacionKeyPressed

    private void txtDenominacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDenominacionKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDenominacionKeyTyped

    private void bgrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgrabarActionPerformed
        // TODO add your handling code here:
        grabar();
        gencodDetalle();
    }//GEN-LAST:event_bgrabarActionPerformed

    private void bAgregarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarItemActionPerformed
        // TODO add your handling code here:

        if (!txtIdLocal.getSize().equals("") && !txtIdVisitante.getText().equals("")) {
            validarPartido();

        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar ambos equipos", "Atencion", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_bAgregarItemActionPerformed

    private void txtDescripcionLigaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionLigaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtDescripcionLigaActionPerformed

    private void txtDescripcionLigaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionLigaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionLigaKeyPressed

    private void txtDescripcionLigaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionLigaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionLigaKeyTyped

    private void txtIdLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdLocalActionPerformed
        // TODO add your handling code here:
        validarFechaLocal();
    }//GEN-LAST:event_txtIdLocalActionPerformed

    private void txtIdLocalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdLocalKeyPressed
        // TODO add your handling code here:
        if (txtIdLocal.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.txtIdLocal;
            VentanaBuscar buscador = new VentanaBuscar("SELECT id,DESCRIPCION AS descripcion\n"
                    + "FROM EQUIPO where DESCRIPCION like  ", new String[]{"CODIGO EQUIPO", "NOMBRE EQUIPO"}, 2, tfParam);
            buscador.setTitle("BUSCAR EQUIPO");
            buscador.setVisible(true);
        }

    }//GEN-LAST:event_txtIdLocalKeyPressed

    private void txtIdLocalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdLocalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLocalKeyTyped

    private void txtDescripcionLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionLocalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionLocalActionPerformed

    private void txtDescripcionLocalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionLocalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionLocalKeyPressed

    private void txtDescripcionLocalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionLocalKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionLocalKeyTyped

    private void txtDescripcionVisitanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionVisitanteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionVisitanteActionPerformed

    private void txtDescripcionVisitanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionVisitanteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionVisitanteKeyPressed

    private void txtDescripcionVisitanteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionVisitanteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionVisitanteKeyTyped

    private void txtFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaActionPerformed
        // TODO add your handling code here:
        if (txtFecha.getText().length() > 0) {
            txtIdLocal.setEnabled(true);
            txtIdLocal.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Debe Ingresar la fecha a registrar!");
            txtFecha.requestFocus();
        }
    }//GEN-LAST:event_txtFechaActionPerformed

    private void txtFechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyPressed
        // TODO add your handling code here:
        if (txtFecha.getText().equals("") && evt.getKeyCode() == 123) {
            new ListaFechas().setVisible(true);
        }
    }//GEN-LAST:event_txtFechaKeyPressed

    private void txtFechaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFechaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaKeyTyped

    private void txtIdLigaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdLigaActionPerformed
        // TODO add your handling code here:
        buscarLiga();
    }//GEN-LAST:event_txtIdLigaActionPerformed

    private void txtIdLigaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdLigaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLigaKeyPressed

    private void txtIdLigaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdLigaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdLigaKeyTyped

    private void txtPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPeriodoActionPerformed
        // TODO add your handling code here:
        txtFecha.setEnabled(true);
        txtFecha.requestFocus();
    }//GEN-LAST:event_txtPeriodoActionPerformed

    private void txtPeriodoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPeriodoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPeriodoKeyPressed

    private void txtPeriodoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPeriodoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPeriodoKeyTyped

    private void bborrar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrar1ActionPerformed
        // TODO add your handling code here:
        cursor.removeRow(grilla.getSelectedRow());
    }//GEN-LAST:event_bborrar1ActionPerformed

    private void txtcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoActionPerformed

    private void txtcodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoKeyPressed

    private void txtcodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcodigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcodigoKeyTyped

    private void txtIdTorneoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdTorneoActionPerformed
        // TODO add your handling code here:
        buscarTorneo();
        bcancelar.setEnabled(true);

    }//GEN-LAST:event_txtIdTorneoActionPerformed

    private void txtIdTorneoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdTorneoKeyPressed
        // TODO add your handling code here:
        if (txtIdTorneo.getText().equals("") && evt.getKeyChar() == KeyEvent.VK_ENTER)//no trae nada
        {
            JTextField[] tfParam = new JTextField[2];
            tfParam[0] = this.txtIdTorneo;
            VentanaBuscar buscador = new VentanaBuscar("SELECT t.id,CONCAT('Torneo: ', t.DENOMINACION , ' ' ,' Periodo: ', t.PERIODO , ' ' ,' Liga: ',  L.DESCRIPCION  )AS descripcion\n"
                    + "FROM torneos t  inner join liga l on t.id_liga = l.id where CONCAT(t.DENOMINACION , ' ' , t.PERIODO , ' ' ,  L.DESCRIPCION  ) like  ", new String[]{"CODIGO LIGA", "NOMBRE LIGA"}, 2, tfParam);
            buscador.setTitle("BUSCAR LIGAS");
            buscador.setVisible(true);
        }


    }//GEN-LAST:event_txtIdTorneoKeyPressed

    private void txtIdTorneoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdTorneoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdTorneoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarTorneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarTorneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarTorneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarTorneo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarTorneo().setVisible(true);
            }
        });
    }
    public String operacion = "";
    public int acu;
    public int aux;
    public int subtotal;
    public int iva = 0;
    public int total = 0, totaliva5, totaliva10, totaliva, ban;
    // public String iva = "";
    //public int total, totaliva5, totaliva10, totaliva, ban;
    public String cant, precio;
    public String iva5, iva10, extend, a1, a2, a3, a4, a5;
    public int condicion = 0;
    public String cantidad = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregarItem;
    private javax.swing.JButton bagregar;
    private javax.swing.JButton bborrar1;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton bgrabar;
    private javax.swing.JButton bsalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTable grilla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField txtDenominacion;
    public static javax.swing.JTextField txtDescripcionLiga;
    private javax.swing.JTextField txtDescripcionLocal;
    private javax.swing.JTextField txtDescripcionVisitante;
    private javax.swing.JTextField txtFecha;
    public static javax.swing.JTextField txtIdLiga;
    private javax.swing.JTextField txtIdLocal;
    public static javax.swing.JTextField txtIdTorneo;
    private javax.swing.JTextField txtIdVisitante;
    public static javax.swing.JTextField txtPeriodo;
    public static javax.swing.JTextField txtcodigo;
    // End of variables declaration//GEN-END:variables

    private void des_text() {

        txtIdVisitante.setEnabled(false);
        txtDenominacion.setEnabled(false);
        txtFecha.setEnabled(false);
        txtIdLocal.setEnabled(false);

    }

    private void hab_botones() // metodo para hab botones
    {
        bagregar.setEnabled(true);
        bgrabar.setEnabled(false);
        bcancelar.setEnabled(false);
        bsalir.setEnabled(true);

    }

    private void gencod() {
        try {
            //       Main.inicio = "no";
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(id),0)+ 1 AS xxx FROM cabecera_torneo");
            conn.resultado.next();
            this.txtcodigo.setText(conn.resultado.getString("xxx"));
        } catch (SQLException ex) {
            Logger.getLogger(RegistrarTorneo.class.getName()).log(Level.SEVERE, null, ex);
            //   } catch (SQLException ex)
            {
                Logger.getLogger(RegistrarTorneo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void limpiargrilla() {
        for (int i = grilla.getRowCount() - 1; i >= 0; i--) {
            cursor.removeRow(i);
        }
    }

    private void grabar() {
        int res = javax.swing.JOptionPane.showOptionDialog(this,
                "Desea grabar la el Registro de Torneo?", "PronosticosDeportivosPY", javax.swing.JOptionPane.OK_CANCEL_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null,
                new Object[]{"Si", "No"}, "Si");

        if (res == javax.swing.JOptionPane.OK_OPTION) {

            try {

                ver_conex conn = new ver_conex();
                conn.sentencia = conn.conexion.createStatement();
                gencod();
                conn.sentencia.executeUpdate("INSERT INTO cabecera_torneo(id,id_torneo,id_liga,periodo)values(" + txtcodigo.getText() + "," + txtIdTorneo.getText() + "," + txtIdLiga.getText() + "," + txtPeriodo.getText() + ")");

                gencodDetalle();
                //graba en el detalle
                for (int fila = 0; fila < grilla.getRowCount(); fila++) {
                    gencodDetalle();
                    conn.sentencia.executeUpdate("insert into detalle_torneo(id,id_cabecera,id_local,id_visitante,fecha,estado)values(" + id_detalle + "," + txtcodigo.getText() + "," + grilla.getValueAt(fila, 1) + "," + grilla.getValueAt(fila, 3) + "," + grilla.getValueAt(fila, 0) + "," + 0 + ")");
                }

                JOptionPane.showMessageDialog(null, "El registro fue grabado Satisfactoriamente", "Aviso", JOptionPane.INFORMATION_MESSAGE);

                limpiargrilla();
                limpiarTextos();

                des_text();
                bgrabar.setEnabled(false);
                bagregar.setEnabled(true);
                bcancelar.setEnabled(false);

            } catch (Exception ex) {
                Logger.getLogger(RegistrarTorneo.class.getName()).log(Level.SEVERE, null, ex);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Operacion Cancelada", "Atencion", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void tirar_grillas() {

        Object[] o = new Object[5];
        o[0] = txtFecha.getText();
        o[1] = txtIdLocal.getText();
        o[2] = txtDescripcionLocal.getText();
        o[3] = txtIdVisitante.getText();
        o[4] = txtDescripcionVisitante.getText();
        cursor.addRow(o);

        bgrabar.setEnabled(true);
        bcancelar.setEnabled(true);
    }

    private void gencodDetalle() {
        try {

            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT IFNULL(MAX(id),0)+1 AS newcod ,CURDATE() AS fecha FROM detalle_torneo");
            conn.resultado.next();
            id_detalle = Integer.parseInt(conn.resultado.getString("newcod"));
        } //fin generar
        catch (SQLException ex) {
            //   Logger.getLogger(facturacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void salir() {
        int respuesta = JOptionPane.showConfirmDialog(this, "DESEA SALIR", "CONFIRMAR", JOptionPane.YES_NO_OPTION);
        if (respuesta == JOptionPane.YES_OPTION) {
            dispose();

        }
    }

    private void limpiarTextos() {

        txtcodigo.setText("");
        txtIdTorneo.setText("");
        txtIdLiga.setText("");
        txtDescripcionLiga.setText("");
        txtDenominacion.setText("");
        txtPeriodo.setText("");

        txtFecha.setText("");
        txtIdLocal.setText("");
        txtDescripcionLocal.setText("");
        txtIdVisitante.setText("");
        txtDescripcionVisitante.setText("");

    }

    private void buscarLiga() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM liga \n"
                    + "                    WHERE  estado = 1 and id = " + this.txtIdLiga.getText());

            if (conn.resultado.next())//si encontro
            {
                this.txtDescripcionLiga.setText(conn.resultado.getString("descripcion"));
                txtDenominacion.setEnabled(true);
                txtDenominacion.requestFocus();

            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE LIGA NO EXISTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                this.txtIdLiga.setEnabled(true);
                this.txtIdLiga.requestFocus();
            }

        } catch (SQLException exceptionSql) {
            System.out.println("exceptionSql" + exceptionSql);
        }
    }

    private void buscarEquipoLocal() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM equipo \n"
                    + "                    WHERE  estado = 1 and id = " + this.txtIdLocal.getText()
                    + "                    and id_liga = " + this.txtIdLiga.getText()
            );

            if (conn.resultado.next())//si encontro
            {
                this.txtDescripcionLocal.setText(conn.resultado.getString("descripcion"));
                txtIdLocal.setEnabled(false);
                txtIdVisitante.setEnabled(true);
                txtIdVisitante.requestFocus();

            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE EQUIPO NO EXISTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                this.txtIdLocal.setEnabled(true);
                this.txtIdLocal.requestFocus();
            }

        } catch (SQLException exceptionSql) {
            System.out.println("exceptionSql" + exceptionSql);
        }
    }

    private void buscarEquipoVisitante() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM equipo \n"
                    + "                    WHERE  estado = 1 and id = " + this.txtIdVisitante.getText());

            if (conn.resultado.next())//si encontro
            {
                this.txtDescripcionVisitante.setText(conn.resultado.getString("descripcion"));
                txtIdVisitante.setEnabled(true);
                txtIdVisitante.requestFocus();

            } else//no encontro
            {
                JOptionPane.showMessageDialog(null, "CODIGO DE EQUIPO NO EXISTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                this.txtIdVisitante.setEnabled(true);
                this.txtIdVisitante.requestFocus();
            }

        } catch (SQLException exceptionSql) {
            System.out.println("exceptionSql" + exceptionSql);
        }
    }

    private void habilitarCamposGrilla() {
        txtIdVisitante.setText("");
        txtIdVisitante.setEnabled(false);
        txtDescripcionVisitante.setText("");

        txtIdLocal.setText("");
        txtDescripcionLocal.setText("");
        txtIdLocal.setEnabled(true);
        txtIdLocal.requestFocus();

    }

    private void buscarTorneo() {

        if (!txtIdTorneo.getText().equals("")) {

            try {
                ver_conex conn = new ver_conex();
                conn.sentencia = conn.conexion.createStatement();
                conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                        + "                    FROM torneos t inner join liga l on t.id_liga = l.id \n"
                        + "                    WHERE  t.id = " + this.txtIdTorneo.getText());

                if (conn.resultado.next())//si encontro
                {
                    this.txtIdLiga.setText(conn.resultado.getString("id_liga"));
                    this.txtDescripcionLiga.setText(conn.resultado.getString("descripcion"));
                    this.txtDenominacion.setText(conn.resultado.getString("denominacion"));
                    this.txtPeriodo.setText(conn.resultado.getString("periodo"));

                    txtIdTorneo.setEnabled(false);
                    txtDenominacion.setEnabled(true);
                    txtDescripcionLiga.setEnabled(true);
                    txtFecha.setEnabled(true);
                    txtFecha.requestFocus();

                } else//no encontro
                {
                    JOptionPane.showMessageDialog(null, "CODIGO DE TORNEO NO EXISTE", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);

                    this.txtIdTorneo.setText("");
                    this.txtIdTorneo.setEnabled(true);
                    this.txtIdTorneo.requestFocus();
                }

            } catch (SQLException exceptionSql) {
                System.out.println("exceptionSql" + exceptionSql);
            }

        }
    }

    private void validarPartido() {

        try {
            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM cabecera_torneo c inner join detalle_torneo d on c.id = d.id_cabecera \n"
                    + "                    WHERE  c.id_torneo = " + this.txtIdTorneo.getText() + " "
                    + "                    and d.id_local = " + this.txtIdLocal.getText() + " "
                    + "                    and d.id_visitante = " + this.txtIdVisitante.getText());

            if (conn.resultado.next())//si encontro
            {
                JOptionPane.showMessageDialog(null, "ESTE PARTIDO YA SE ENCUENTRA REGISTRADO EN ESTE TORNEO VERIFIQUELO ", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);

                this.txtIdLocal.setText("");
                this.txtIdLocal.setEnabled(true);
                this.txtIdLocal.requestFocus();

                this.txtIdVisitante.setText("");
                this.txtIdVisitante.setEnabled(false);

            } else//no encontro
            {
                tirar_grillas();
                habilitarCamposGrilla();
                bAgregarItem.setEnabled(false);

            }

        } catch (SQLException exceptionSql) {
            System.out.println("exceptionSql" + exceptionSql);
        }
    }

    private void validarFechaLocal() {

        try {

            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM cabecera_torneo c inner join detalle_torneo d on c.id = d.id_cabecera \n"
                    + "                    WHERE  c.id_torneo = " + this.txtIdTorneo.getText() + " "
                    + "                    and d.id_local = " + this.txtIdLocal.getText() + " "
                    + "                    and d.fecha = " + this.txtFecha.getText() + " "
                    + "                    or  d.id_visitante = " + this.txtIdLocal.getText() + " "
                    + "                    and d.id_visitante = " + this.txtIdLocal.getText() + " "
                    + "                    and d.fecha = " + this.txtFecha.getText());

            if (conn.resultado.next())//si encontro
            {

                JOptionPane.showMessageDialog(null, "EL EQUIPO LOCAL  YA SE ENCUENTRA REGISTRADO EN LA FECHA : " + this.txtFecha.getText() + " ", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                txtIdLocal.setText("");
                txtIdLocal.requestFocus();

            }

            buscarEquipoLocal();

        } catch (Exception e) {
        }

    }

    private void validarVisitante() {
        if (!txtIdLocal.getText().equals(txtIdVisitante.getText())) {

            if (grilla.getRowCount() > 0) {

                for (int fila = 0; fila < grilla.getRowCount(); fila++) {

                    String local = "";
                    String visitante = "";
                    String fecha = "";

                    local = grilla.getValueAt(fila, 1).toString();
                    visitante = grilla.getValueAt(fila, 3).toString();
                    fecha = grilla.getValueAt(fila, 0).toString();

                    if (local.equals(txtIdLocal.getText()) && fecha.equals(txtFecha.getText()) || visitante.equals(txtIdVisitante.getText()) && fecha.equals(txtFecha.getText())
                            || visitante.equals(txtIdLocal.getText()) && fecha.equals(txtFecha.getText()) || local.equals(txtIdVisitante.getText()) && fecha.equals(txtFecha.getText())) {
                        JOptionPane.showMessageDialog(null, "Un equipo no puede jugar 2 veces en una misma fecha ", "Aviso", JOptionPane.INFORMATION_MESSAGE);

                        txtIdVisitante.setEnabled(false);
                        txtDescripcionVisitante.setText("");
                        txtIdVisitante.setText("");
                        txtDescripcionLocal.setText("");
                        bAgregarItem.setEnabled(false);
                        txtIdLocal.setText("");
                        txtIdLocal.setEnabled(true);
                        txtIdLocal.requestFocus();
                    } else {

                        if (local.equals(txtIdLocal.getText()) && visitante.equals(txtIdVisitante.getText()) && fecha.equals(txtFecha.getText())
                                || visitante.equals(txtIdLocal.getText()) && local.equals(txtIdVisitante.getText()) && fecha.equals(txtFecha.getText())) {
                            JOptionPane.showMessageDialog(null, "Este partido ya se encuentra cargado ", "Aviso", JOptionPane.INFORMATION_MESSAGE);

                            txtIdVisitante.setEnabled(false);
                            txtDescripcionVisitante.setText("");
                            txtIdVisitante.setText("");

                            txtIdLocal.setText("");
                            txtDescripcionLocal.setText("");
                            txtIdLocal.setEnabled(true);
                            bAgregarItem.setEnabled(false);
                            txtIdLocal.requestFocus();

                        } else {
                            buscarEquipoVisitante();
                            bAgregarItem.setEnabled(true);
                            bAgregarItem.requestFocus();
                        }
                    }
                }
            } else {

                buscarEquipoVisitante();
                bAgregarItem.setEnabled(true);
                bAgregarItem.requestFocus();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Los equipos no pueden jugar entre si, favor ingrese otro equipo", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            txtIdVisitante.setEnabled(true);
            txtIdVisitante.setText("");
            txtIdVisitante.requestFocus();
            bAgregarItem.setEnabled(false);
            bAgregarItem.setBackground(Color.white);
        }
    }

    private void validarFechaVisitante() {

        try {

            ver_conex conn = new ver_conex();
            conn.sentencia = conn.conexion.createStatement();
            conn.resultado = conn.sentencia.executeQuery("SELECT  * "
                    + "                    FROM cabecera_torneo c inner join detalle_torneo d on c.id = d.id_cabecera \n"
                    + "                    WHERE  c.id_torneo = " + this.txtIdTorneo.getText() + " "
                    + "                    and d.id_local = " + this.txtIdVisitante.getText() + " "
                    + "                    and d.fecha = " + this.txtFecha.getText() + " "
                    + "                    and c.id_torneo = " + this.txtIdTorneo.getText() + " "        
                            
                    + "                    or  d.id_visitante = " + this.txtIdVisitante.getText() + " "
                    + "                    and d.id_visitante = " + this.txtIdVisitante.getText() + " "
                    + "                    and c.id_torneo = " + this.txtIdTorneo.getText()+ " "        
                    + "                    and d.fecha = " + this.txtFecha.getText());

            if (conn.resultado.next())//si encontro
            {

                JOptionPane.showMessageDialog(null, "EL EQUIPO VISITANTE YA SE ENCUENTRA REGISTRADO EN LA FECHA : " + this.txtFecha.getText() + " ", "MENSAJE", JOptionPane.INFORMATION_MESSAGE);
                txtDescripcionVisitante.setText("");
                txtIdVisitante.setText("");
                txtIdVisitante.requestFocus();
                bAgregarItem.setEnabled(false);

            } else {
                validarVisitante();
            }
        } catch (Exception e) {
            System.out.println("error " + e);
        }

    }

}
